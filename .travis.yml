# travis 가 어떤 행동을 할지 알려주는 파일!!!!!!!!!!!!

language: java
jdk:
  - openjdk11  #프로젝트의 실제 JDK 버전과 Travis CI에서 사용하는 JDK 버전을 맞추는 것이 좋다.

# Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정. 지금은 master 브랜치에 push될 때만 수행
branches:
  only:
    - master

# Travis CI 서버의 Home을 지정해주기.  pom.xml을 통해 의존성 받게 되면 이를 해당 디렉토리에 캐시
#같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.pom'

# master 브랜치에 푸시되었을 때 수행하는 명령어. 푸시가 되면 자동으로 clean & build 를 수행
script: "mvn clean install"


# S3, codedeploy 설정
before_deploy: # deploy 명령어가 실행되기 전에 수행
  - zip -r winterfoodies-project * # Travis CI에서 파일을 하나하나 복사하는건 복사시간이 많이 걸려서 프로젝트 폴더 채로 압축해서 S3로 전달
  - mkdir -p deploy                #travis 서버 내에서 deploy디렉토리를 만드는것. ec2와 상관x
  - mv winterfoodies-project.zip deploy/winterfoodies-project.zip

deploy: # 외부 서비스와 연동될 행위들을 선언
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: winterfoodies-project-deploy # 생성한 S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: public_read
    local_dir: deploy   # before_deploy에서 생성한 디렉토리. 해당 디렉토리(deploy)내용들만 S3로 전송
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY             # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY         # Travis repo settings에 설정된 값
    bucket: winterfoodies-project-deploy       # S3 버킷
    key: winterfoodies-project.zip             # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: winterfoodies-project         # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: winterfoodies-project-group       # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true


# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - yocu1784@gmail.com

# 권한 부여 (빌드시 에러 방지)
before_install:
  - chmod +x+w mvnw
